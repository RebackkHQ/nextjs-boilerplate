datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          Role      @default(USER)

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  chargeBeeId             String @unique @map(name: "chargebee_id")
  chargeBeeSubscriptionId String @unique @map(name: "chargebee_subscription_id")
  chargeBeePriceId        String @unique @map(name: "chargebee_price_id")
  chargeBeeCurrentPlanEnd String @map(name: "chargebee_current_plan_end")

  @@map(name: "users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map(name: "sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map(name: "verification_tokens")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  image     String?
  members   User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String

  @@map(name: "organizations")
}
